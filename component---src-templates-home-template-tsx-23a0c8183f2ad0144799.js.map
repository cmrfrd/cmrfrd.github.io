{"version":3,"sources":["webpack:///./src/components/Name/Name.tsx","webpack:///./src/sections/posts/Hero.tsx","webpack:///./src/templates/home.template.tsx"],"names":["name","useStaticQuery","site","siteMetadata","siteName","base","p","color","theme","colors","primary","fontFamily","fonts","serif","marginTop","overflow","display","padding","Nameh1","Headings","h1","Hero","hero","home","edges","node","Section","relative","id","HeadingContainer","style","maxWidth","Name","HeroHeading","heading","Horizontal","horizontalNav","mediaqueries","desktop","tablet","phablet","margin","paddingTop","paddingBottom","position","mediaquery","width","phone_large","phone","accent","Container","HomePage","location","pageContext","homePageData","numberOfPosts","morePostsText","postsHeadingText","postsToShow","posts","slice","SEO","pathname","narrow","PostsHeading","LinkContainer","to","text","bottom","left","zIndex","transition","colorModeTransition","fontStyle","fontSize","lineHeight","a","flexDirection","textAlign"],"mappings":"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","file":"component---src-templates-home-template-tsx-23a0c8183f2ad0144799.js","sourcesContent":["import Headings from '@components/Headings';\nimport { ITAOAThemeUIContext, IStringMap } from '@types';\n\nimport styled from '@emotion/styled';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nconst nameQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        siteName\n      }\n    }\n  }\n`;\n\nconst name = (): string => useStaticQuery(nameQuery).site.siteMetadata.siteName;\n\nconst base = (p: ITAOAThemeUIContext): IStringMap => ({\n  color: `${p.theme.colors.primary}`,\n  fontFamily: `${p.theme.fonts.serif}`,\n  marginTop: '20px',\n  overflow: 'auto',\n  display: 'inline',\n  padding: '0 0px !important'\n});\n\nconst h1: React.FC = (): ReactElement => {\n  const Nameh1 = styled(Headings.h1)(base);\n  return <Nameh1>{name()}</Nameh1>;\n};\nconst h2: React.FC = (): ReactElement => {\n  const Nameh2 = styled(Headings.h2)(base);\n  return <Nameh2>{name()}</Nameh2>;\n};\nconst h3: React.FC = (): ReactElement => {\n  const Nameh3 = styled(Headings.h3)(base);\n  return <Nameh3>{name()}</Nameh3>;\n};\nconst h4: React.FC = (): ReactElement => {\n  const Nameh4 = styled(Headings.h4)(base);\n  return <Nameh4>{name()}</Nameh4>;\n};\nconst h5: React.FC = (): ReactElement => {\n  const Nameh5 = styled(Headings.h5)(base);\n  return <Nameh5>{name()}</Nameh5>;\n};\nconst h6: React.FC = (): ReactElement => {\n  const Nameh6 = styled(Headings.h6)(base);\n  return <Nameh6>{name()}</Nameh6>;\n};\n\nexport default {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6\n};\n","import { GridLayoutContext } from './Posts.List.Context';\n\nimport Name from '@components/Name';\nimport Section from '@components/Section';\nimport Icons from '@icons';\nimport mediaqueries, { mediaquery } from '@styles/media';\nimport { IAuthor } from '@types';\n\nimport styled from '@emotion/styled';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React, { useContext } from 'react';\n\nconst homeHeroQuery = graphql`\n  {\n    home: allHomeYaml {\n      edges {\n        node {\n          home {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Hero: React.FC = () => {\n  const { hero } = useStaticQuery(homeHeroQuery).home.edges[0].node.home;\n\n  return (\n    <Section relative id=\"Posts__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <Name.h1 />\n        <HeroHeading>{hero.heading}</HeroHeading>\n      </HeadingContainer>\n      <Horizontal />\n    </Section>\n  );\n};\n\nexport default Hero;\n\nconst Horizontal = styled.div`\n  position: relative;\n  margin: 20px auto 20px;\n  border-bottom: 1px solid ${p => p.theme.colors.horizontalNav};\n`;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\nmargin-bottom: 80px;\n`};\n\n  ${mediaqueries.tablet`\nmargin-bottom: 60px;\n`};\n\n  ${mediaqueries.phablet`\ndisplay: none;\n`};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\ndisplay: none;\n`};\n`;\n\nconst HeadingContainer = styled.div({\n  margin: '100px auto',\n  paddingTop: '150px',\n  paddingBottom: '150px',\n  position: 'relative',\n\n  [mediaquery.desktop()]: {\n    width: '95%',\n    paddingTop: '120px',\n    paddingBottom: '120px'\n  },\n\n  [mediaquery.tablet()]: {\n    width: '100%'\n  },\n\n  [mediaquery.phablet()]: {\n    width: '100%',\n    paddingTop: '100px',\n    paddingBottom: '100px'\n  },\n\n  [mediaquery.phone_large()]: {\n    width: '100%',\n    paddingTop: '115px',\n    paddingBottom: '115px'\n  },\n\n  [mediaquery.phone()]: {\n    width: '100%',\n    paddingTop: '90px',\n    paddingBottom: '90px'\n  }\n});\n\nconst HeroHeading = styled.h2`\n  font-family: ${p => p.theme.fonts.serif};\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.15;\n  margin-top: 20px;\n  font-size: 26px;\n  color: ${p => p.theme.colors.primary};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaquery.desktop()} {\n    font-size: 26px;\n  }\n\n  ${mediaquery.tablet()} {\n    font-size: 18px;\n  }\n\n  ${mediaquery.phablet()} {\n    font-size: 18px;\n  } ;\n`;\n","import Hero from '../sections/posts/Hero';\nimport PostsList from '../sections/posts/Posts.List';\n\nimport { MediumButton } from '@components/Button';\nimport Headings from '@components/Headings';\nimport SEO from '@components/SEO';\nimport Section from '@components/Section';\nimport { mediaquery, mediaqueryup } from '@styles/media';\nimport { Template, TTemplate, ITAOAThemeUIContext } from '@types';\n\nimport { css } from '@emotion/core';\nimport { SerializedStyles } from '@emotion/serialize';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\n\nconst HomePage: Template = ({ location, pageContext }: TTemplate) => {\n  const {\n    numberOfPosts,\n    morePostsText,\n    postsHeadingText\n  } = pageContext.homePageData.edges[0].node.home;\n\n  const { posts } = pageContext;\n  const postsToShow = posts.slice(0, numberOfPosts);\n\n  return (\n    <span>\n      <SEO pathname={location.pathname} />\n      <Hero />\n      <Section narrow>\n        <Container>\n          <PostsHeading>{postsHeadingText}</PostsHeading>\n          <PostsList posts={postsToShow} />\n          <LinkContainer>\n            <Link to={'/posts'}>\n              <MediumButton text={morePostsText} />\n            </Link>\n          </LinkContainer>\n        </Container>\n      </Section>\n    </span>\n  );\n};\n\nexport default HomePage;\n\nconst Container = styled.div((p: ITAOAThemeUIContext) => ({\n  position: 'relative',\n  bottom: 0,\n  left: 0,\n  zIndex: 1,\n  width: '100%',\n  transition: p.theme.colorModeTransition\n}));\n\nconst PostsHeading = styled.h2((p: ITAOAThemeUIContext) => ({\n  fontStyle: 'normal',\n  fontSize: '30px',\n  lineHeight: '1.15',\n  color: `${p.theme.colors.primary}`,\n  paddingBottom: '20px',\n\n  a: {\n    color: `${p.theme.colors.accent}`\n  },\n\n  [mediaquery.desktop()]: {\n    fontSize: '20px'\n  }\n}));\n\nconst paginationItemMixin = (p: ITAOAThemeUIContext): SerializedStyles => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueryup.desktop()} {\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  }\n`;\n\nconst LinkContainer = styled.div({\n  marginTop: '100px',\n  display: 'flex',\n  flexDirection: 'row',\n  [mediaquery.phablet()]: {\n    position: 'relative',\n    display: 'block',\n    textAlign: 'center'\n  }\n});\n"],"sourceRoot":""}