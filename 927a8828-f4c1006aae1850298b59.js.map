{"version":3,"sources":["webpack:///./src/sections/posts/Posts.List.tsx"],"names":["PostsList","posts","alwaysShowAllDetails","currentPage","searching","gridLayout","useContext","GridLayoutContext","gridRowAnimationDurationSeconds","useStaticQuery","allSite","edges","node","siteMetadata","transition","PostsListContainer","animatePresenceProps","initial","exitBeforeEnter","motionKey","duration","motionProps","animate","ListLayoutContainer","key","List","reverse","map","ap","index","ListItem","post","narrow","hasOverflow","title","length","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","PostLink","to","slug","data-a11y","Item","ImageContainer","src","Title","Excerpt","excerpt","MetaData","date","timeToRead","limitToTwoLines","css","mediaqueries","phablet","showDetails","p","listTile","desktop_medium","tablet","listItemRow","desktop","theme","colors","card","listItemTile","listRow","invPrimary","Headings","h2","fonts","serif","fontSize","marginBottom","color","grey","display","maxWidth","mediaquery","padding","WebkitLineClamp","opacity","Link","position","width","height","top","left","paddingBottom","borderRadius","zIndex","transform","boxShadow","accent","content","border","background"],"mappings":"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","file":"927a8828-f4c1006aae1850298b59.js","sourcesContent":["import { GridLayoutContext } from './Posts.List.Context';\n\nimport FadeTransition from '@components/FadeTransition';\nimport Headings from '@components/Headings';\nimport Image, { ImagePlaceholder } from '@components/Image';\nimport mediaqueries, { mediaquery } from '@styles/media';\nimport { IPost, ITAOAThemeUIContext } from '@types';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\nimport React, { useContext } from 'react';\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface IPostsListProps {\n  posts: IPost[];\n  alwaysShowAllDetails?: boolean;\n  currentPage: number;\n}\n\nconst siteQuery = graphql`\n  {\n    allSite {\n      edges {\n        node {\n          siteMetadata {\n            transition {\n              gridRowAnimationDurationSeconds\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst PostsList: React.FC<IPostsListProps> = ({\n  posts,\n  alwaysShowAllDetails,\n  currentPage,\n  searching\n}: IPostsListProps) => {\n  if (!posts) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const { gridRowAnimationDurationSeconds } = useStaticQuery(\n    siteQuery\n  ).allSite.edges[0].node.siteMetadata.transition;\n\n  /*\n   * Three transitions are here for three possible interactions that\n   * can affect the visibility of the posts.\n   * 1. Change from grid layout to row layout\n   * 2. Change of page\n   * 3. Searching for an post\n   */\n  return (\n    <PostsListContainer alwaysShowAllDetails={alwaysShowAllDetails}>\n      <FadeTransition\n        animatePresenceProps={{ initial: false, exitBeforeEnter: true }}\n        motionKey={currentPage}\n        duration={gridRowAnimationDurationSeconds}\n      >\n        <FadeTransition\n          animatePresenceProps={{ exitBeforeEnter: true }}\n          motionKey={gridLayout}\n          duration={gridRowAnimationDurationSeconds}\n        >\n          <FadeTransition\n            animatePresenceProps={{ exitBeforeEnter: true }}\n            motionKey={searching}\n            duration={gridRowAnimationDurationSeconds}\n            motionProps={{\n              animate: searching ? 'exit' : 'enter'\n            }}\n          >\n            <ListLayoutContainer key={gridLayout} gridLayout={gridLayout} posts={posts} />\n          </FadeTransition>\n        </FadeTransition>\n      </FadeTransition>\n    </PostsListContainer>\n  );\n};\n\nexport default PostsList;\n\ninterface IListLayoutContainerProps {\n  posts: any;\n  gridLayout: any;\n}\n\nconst ListLayoutContainer: React.FC<IListLayoutContainerProps> = ({\n  posts,\n  gridLayout,\n  ...props\n}: IListLayoutContainerProps) => {\n  return (\n    <List gridLayout={gridLayout} reverse={true}>\n      {[...posts].map((ap: IPost, index: number) => (\n        <ListItem key={index} post={ap} narrow={true} gridLayout={gridLayout} />\n      ))}\n    </List>\n  );\n};\n\ninterface IPostsListItemProps {\n  post: IPost;\n  narrow?: boolean;\n  gridLayout: string;\n}\n\nconst ListItem: React.FC<IPostsListItemProps> = ({\n  post,\n  narrow,\n  gridLayout\n}: IPostsListItemProps) => {\n  if (!post) return null;\n\n  const hasOverflow = narrow && post.title.length > 35;\n  const imageSource = narrow ? post.hero.narrow : post.hero.regular;\n  const hasHeroImage =\n    imageSource && Object.keys(imageSource).length !== 0 && imageSource.constructor === Object;\n\n  return (\n    <PostLink to={post.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <div>\n          <Title hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {post.title}\n          </Title>\n          <Excerpt narrow={narrow} hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {post.excerpt}\n          </Excerpt>\n          <MetaData>\n            {post.date} Â· {post.timeToRead} min read\n          </MetaData>\n        </div>\n      </Item>\n    </PostLink>\n  );\n};\n\nconst wide = '1fr';\nconst narrow = '1fr';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n                       -webkit-line-clamp: 3;\n`}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst PostsListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  padding-top: 20px;\n  min-height: 300px;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\nconst listTile = p => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${narrow} ${narrow};\n  grid-template-rows: 2;\n  column-gap: 60px;\n\n  &:not(:last-child) {\n    margin-bottom: 75px;\n  }\n\n  ${mediaqueries.desktop_medium`\ngrid-template-columns: 1fr 1fr;\n`}\n\n  ${mediaqueries.tablet`\ngrid-template-columns: 1fr;\n\n                  &:not(:last-child) {\n                      margin-bottom: 0;\n                  }\n`}\n`;\n\nconst listItemRow = p => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 500px;\n  grid-column-gap: 120px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 20px;\n\n  ${mediaqueries.desktop`\ngrid-column-gap: 24px;\ngrid-template-columns: 1fr 380px;\n`}\n\n  ${mediaqueries.tablet`\ngrid-template-columns: 1fr;\n`}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\nbox-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\nborder-bottom-right-radius: 5px;\nborder-bottom-left-radius: 5px;\n`}\n`;\n\nconst listItemTile = p => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\nmargin-bottom: 60px;\n`}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\nmargin-bottom: 40px;\nbox-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\nborder-bottom-right-radius: 5px;\nborder-bottom-left-radius: 5px;\n`}\n`;\n\n// If only 1 post, dont create 2 rows.\nconst listRow = p => css`\n  display: grid;\n  grid-template-rows: '1fr 1fr';\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n}>`\n  justify-content: ${p => (p.gridLayout === 'tiles' ? 'space-between' : 'none')};\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\nconst ImageContainer = styled.div<{ narrow: boolean; gridLayout: string }>`\n  background: ${p => p.theme.colors.invPrimary};\n  position: relative;\n  height: '200px';\n  width: '100%';\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '30px' : 0)};\n  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\nheight: 200px;\nmargin-bottom: 35px;\n`}\n\n  ${mediaqueries.phablet`\noverflow: hidden;\nmargin-bottom: 0;\nbox-shadow: none;\nborder-top-right-radius: 5px;\nborder-top-left-radius: 5px;\n`}\n`;\n\nconst Title = styled(Headings.h2)`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? '35px' : '10px')};\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n\n  ${mediaqueries.desktop`\nmargin-bottom: 15px;\n`}\n\n  ${mediaqueries.tablet`\nfont-size: 24px;\n`}\n\n  ${mediaqueries.phablet`\nfont-size: 22px;\npadding: 15px 20px 0;\nmargin-bottom: 10px;\n             -webkit-line-clamp: 3;\n`}\n`;\n\ninterface IExcerptProps extends ITAOAThemeUIContext {\n  hasOverflow: boolean;\n  narrow: boolean;\n  gridLayout: string;\n}\n\n//    ${limitToTwoLines};\nconst Excerpt = styled.p((p: IExcerptProps) => ({\n  fontSize: '16px',\n  marginBottom: '10px',\n  color: `${p.theme.colors.grey}`,\n  display: p.hasOverflow && p.gridLayout === 'tiles' ? 'none' : 'box',\n  maxWidth: p.narrow ? '415px' : '515px',\n\n  [mediaquery.desktop()]: {\n    display: '-webkit-box'\n  },\n\n  [mediaquery.phablet()]: {\n    marginBottom: '15px'\n  },\n\n  [mediaquery.phablet()]: {\n    maxWidth: '100%',\n    padding: '0 20px',\n    marginBottom: '10px',\n    WebkitLineClamp: 3\n  }\n}));\n\nconst MetaData = styled.div((p: ITAOAThemeUIContext) => ({\n  fontSize: '16px',\n  color: `${p.theme.colors.grey}`,\n  opacity: 0.33,\n\n  [mediaquery.phablet()]: {\n    maxWidth: '100%',\n    padding: '0 20px 20px'\n  }\n}));\n\nconst PostLink = styled(Link)((p: ITAOAThemeUIContext) => ({\n  position: 'relative',\n  display: 'block',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  paddingBottom: '30px',\n  borderRadius: '5px',\n  zIndex: 1,\n  transition: 'transform 0.33s var(--ease-out-quart)',\n\n  [`&:hover ${ImageContainer}, &:focus ${ImageContainer}`]: {\n    transform: 'translateY(-1px)',\n    boxShadow: '0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3)'\n  },\n\n  [`&:hover h2, &:focus h2`]: {\n    color: `${p.theme.colors.accent}`\n  },\n\n  [`&[data-a11y='true']:focus::after`]: {\n    content: ' ',\n    position: 'absolute',\n    left: '-1.5%',\n    top: '-2%',\n    width: '103%',\n    height: '104%',\n    border: `3px solid ${p.theme.colors.accent}`,\n    background: `rgba(255, 255, 255, 0.01)`,\n    borderRadius: `5px`\n  },\n\n  [mediaquery.phablet()]: {\n    [`&:hover ${ImageContainer}`]: {\n      transform: 'none',\n      boxShadow: 'initial'\n    },\n\n    '&:active': {\n      transform: 'scale(0.97) translateY(3px)'\n    }\n  }\n}));\n\n/* const PostLink = styled(Link)`\n *   position: relative;\n *   display: block;\n *   width: 100%;\n *   height: 100%;\n *   top: 0;\n *   left: 0;\n *   padding-bottom: 30px;\n *   border-radius: 5px;\n *   z-index: 1;\n *   transition: transform 0.33s var(--ease-out-quart);\n *   -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n *\n *   &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n *     transform: translateY(-1px);\n *     box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);\n *   }\n *\n *   &: hover h2;\n *   &:focus h2 {\n *     color: ${p => p.theme.colors.accent};\n *   }\n *\n *   &[data-a11y='true']:focus::after {\n *     content: ' ';\n *     position: absolute;\n *     left: -1.5%;\n *     top: -2%;\n *     width: 103%;\n *     height: 104%;\n *     border: 3px solid ${p => p.theme.colors.accent};\n *     background: rgba(255, 255, 255, 0.01);\n *     border-radius: 5px;\n *   }\n *\n *   ${mediaqueries.phablet`\n *                    &:hover ${ImageContainer} {\n *                        transform: none;\n *                        box-shadow: initial;\n *                    }\n *\n *                    &:active {\n *                        transform: scale(0.97) translateY(3px);\n *                    }\n * `}\n * `; */\n"],"sourceRoot":""}